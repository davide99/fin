#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{pgfplots}
\usepackage{lmodern}
\usepackage[T1]{fontenc}
\usepackage{lscape}
\usetikzlibrary{patterns}
\usetikzlibrary{positioning,fit}
\usetikzlibrary{er}
\usepackage{pgf-umlcd}
\pgfmathdeclarefunction{gauss}{2}{%
  \pgfmathparse{1/(#2*sqrt(2*pi))*exp(-((x-#1)^2)/(2*#2^2))}%
}
\setkeys{Gin}{width=\linewidth}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\series bold
\shape smallcaps
\size largest
The Making of a
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\series bold
\shape smallcaps
\size largest
Music Recognition System
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\series bold
\shape smallcaps
\size largest
in Java
\end_layout

\begin_layout Standard
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size large
Davide Pisan√≤
\end_layout

\begin_layout Standard
\align center
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
I.I.S.
 Antonio Meucci
\end_layout

\begin_layout Standard
\align center

\size large
Casarano (LE)
\end_layout

\begin_layout Standard
\align center

\size large
Indirizzo Informatica e Telecomunicazioni
\end_layout

\begin_layout Standard
\align center

\size large
A.S.
 2017/2018
\end_layout

\begin_layout Standard
\align center
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Music and physics
\end_layout

\begin_layout Standard
A sound is a vibration that propagates through the air and can be understood
 by ears.
 MP3 players or computers use headphones or built-in speakers to produce
 vibrations and make 
\begin_inset Quotes eld
\end_inset

sounds
\begin_inset Quotes erd
\end_inset

.
 Music is just a kind of signal which can be reproduced using various sinusoidal
 waveforms and like that must be treated.
\end_layout

\begin_layout Section
Signals scrambling via sines sums
\end_layout

\begin_layout Standard
A sine wave is characterized by two parameters:
\end_layout

\begin_layout Itemize

\shape italic
Frequency
\shape default
 
\begin_inset Formula $\Longrightarrow$
\end_inset

 the number of cycles per unit time, measured in Hertz
\end_layout

\begin_layout Itemize

\shape italic
Amplitude
\shape default
 
\begin_inset Formula $\Longrightarrow$
\end_inset

 the height of the cycle
\end_layout

\begin_layout Standard
A generic sine wave is described by the function:
\begin_inset Formula 
\[
y(t)=A\,sin(2\pi ft+\varphi)
\]

\end_inset

where:
\end_layout

\begin_layout Itemize
\begin_inset Formula $A$
\end_inset

 is the amplitude
\end_layout

\begin_layout Itemize
\begin_inset Formula $f$
\end_inset

 is the frequency
\end_layout

\begin_layout Itemize
\begin_inset Formula $t$
\end_inset

 is the time
\end_layout

\begin_layout Itemize
\begin_inset Formula $\varphi$
\end_inset

 is the phase
\end_layout

\begin_layout Standard
In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:20Hz-sine-wave"

\end_inset

 the sine wave is described by the function:
\begin_inset Formula 
\[
y(t)=1\,sin(2\pi20+0)=sin(40\pi)
\]

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		domain=0:.1,
\end_layout

\begin_layout Plain Layout

		samples=100,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = .1,
\end_layout

\begin_layout Plain Layout

		ymin =  -2, ymax = 2,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = amplitude,
\end_layout

\begin_layout Plain Layout

		axis x line=bottom,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		xtick={0,0.02,0.04,0.06,0.08,0.1}
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(2*pi*20*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			fill=black!70,
\end_layout

\begin_layout Plain Layout

			pattern=north east lines,
\end_layout

\begin_layout Plain Layout

			line width=0pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(2*pi*20*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:20Hz-sine-wave"

\end_inset

a 20Hz sine wave
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
But, in the real world, almost any signal is a weighted sum of sines.
 For example, take three different sine waves, as follows:
\end_layout

\begin_layout Itemize
Frequency 10Hz and amplitude 1 
\begin_inset Formula $\Longrightarrow$
\end_inset

 
\begin_inset Formula $a(t)=sin(20\pi t)$
\end_inset


\end_layout

\begin_layout Itemize
Frequency 30Hz and amplitude 2 
\begin_inset Formula $\Longrightarrow$
\end_inset

 
\begin_inset Formula $b(t)=2sin(60\pi t)$
\end_inset


\end_layout

\begin_layout Itemize
Frequency 60Hz and amplitude 3 
\begin_inset Formula $\Longrightarrow$
\end_inset

 
\begin_inset Formula $c(t)=3sin(120\pi t)$
\end_inset


\end_layout

\begin_layout Standard
Those three functions can be plotted separately as shown in the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Three-different-sine"

\end_inset

, or they can be summed up in just a single function to represent a more
 realistic sound (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sum-of-the"

\end_inset

).
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		domain=0:.1,
\end_layout

\begin_layout Plain Layout

		samples=500,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = .1,
\end_layout

\begin_layout Plain Layout

		ymin =  -4, ymax = 4,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = amplitude,
\end_layout

\begin_layout Plain Layout

		axis x line=bottom,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		xtick={0,0.02,0.04,0.06,0.08,0.1}
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(pi*20*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=red,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			2*sin(deg(pi*60*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=green,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			3*sin(deg(pi*120*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Three-different-sine"

\end_inset

Three different sine waves
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		domain=0:.1,
\end_layout

\begin_layout Plain Layout

		samples=500,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = .1,
\end_layout

\begin_layout Plain Layout

		ymin =  -6, ymax = 6,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = amplitude,
\end_layout

\begin_layout Plain Layout

		axis x line=bottom,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		xtick={0,0.02,0.04,0.06,0.08,0.1}
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(pi*20*x)) + 2*sin(deg(pi*60*x)) + 3*sin(deg(pi*120*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sum-of-the"

\end_inset

Sum of the three sine waves
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Spectrogram
\end_layout

\begin_layout Standard
A 
\series bold
spectrogram
\series default
 (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Spectrogram-of-a"

\end_inset

) is a visual representation of how the frequencies of a signal vary with
 time.
 Usually, a spectrogram is made up of the axis (making a 3D graph):
\end_layout

\begin_layout Itemize
Time on the horizontal axis (x)
\end_layout

\begin_layout Itemize
Frequencies on the vertical axis (y)
\end_layout

\begin_layout Itemize
Amplitude of a given frequency at a given time (described by a color)
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/spec.svg

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Spectrogram-of-a"

\end_inset

Spectrogram of a real song
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Digitalization
\end_layout

\begin_layout Standard
Nowadays the most common way to listen to music is via a digital file (such
 as an MP3 file or a FLAC file and so on).
 However, a sound is an analog phenomenon that needs to be converted into
 a 
\series bold
digital
\series default
 representation, in order to be easily recorded and stored.
\end_layout

\begin_layout Subsection
Sampling
\end_layout

\begin_layout Standard
Analog signals are continuous signals, that means that given two boundaries
 in the signals there's always a point among them.
 But in the digital world isn't affordable to store an infinite amount of
 data, so the analog signal needs to be reduced in a 
\series bold
discrete-time signal
\series default
.
 This process is called 
\series bold
sampling
\series default
.
 It is quite simple: an instantaneous value of the continuous signal is
 taken every 
\series bold
T
\series default
 seconds.
 T is called 
\series bold
sampling period
\series default
 and it should be short enough so that the digital song sounds like the
 analog one.
 The 
\series bold
sampling rate 
\series default
or 
\series bold
sampling frequency 
\series default
f
\begin_inset script subscript

\begin_layout Plain Layout
s
\end_layout

\end_inset

 is the number of samples obtained in one second, given by the formula:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f_{s}=\frac{1}{T}
\]

\end_inset


\end_layout

\begin_layout Standard
The standard sampling rate for digital music is usually 44100 Hz.
 The reason behind that number lies in the Nyquist-Shannon theorem which
 can be expressed as:
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Suppose the highest frequency component for a given analog signal is 
\begin_inset Formula $f_{max}$
\end_inset

, the sampling rate must be at least
\shape italic
 
\begin_inset Formula $2f_{max}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There's enough theory involved in the theorem, but it states that given
 an analog signal, it needs at least 2 points per cycle to be correctly
 identified.
 So given that the frequencies that the human ears can listen to sounds
 from 20 Hz to 20 kHz, take the highest boundary and multiply it by 2, it
 will give 40 kHz, which is close enough to the standardized 44.1 kHz (figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sampling-example-of"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		domain=0:.1,
\end_layout

\begin_layout Plain Layout

		samples=500,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = .1,
\end_layout

\begin_layout Plain Layout

		ymin =  -2, ymax = 2,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = amplitude,
\end_layout

\begin_layout Plain Layout

		axis x line=bottom,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		xtick={0,0.02,0.04,0.06,0.08,0.1}
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			cos(deg(pi*60*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			red,
\end_layout

\begin_layout Plain Layout

			mark=+,
\end_layout

\begin_layout Plain Layout

			line width=1pt,
\end_layout

\begin_layout Plain Layout

			samples=7.5
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			cos(deg(pi*60*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Sampling-example-of"

\end_inset

Sampling example of a 30 Hz signal
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Quantization
\end_layout

\begin_layout Standard
With the sampling process, the signal isn't fully digital: the time resolution
 became discrete but what about signal amplitude? The amplitude of a signal
 represents its loudness, and in an analog world it is continuous, so there
 must be a way to make it discrete.
 This process is called 
\series bold
quantization
\series default
.
 The quantization resolution is measured in bits, also known as 
\series bold
bit depth
\series default
 of a song.
\end_layout

\begin_layout Standard
Let's take a depth of 3 bits, it means that the loudness of the song can
 vary between 0 and 
\begin_inset Formula $2^{3}-1$
\end_inset

 , so there are just 8 quantization levels to represent the loudness of
 the whole song (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:3-bit-quantization-example"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		domain=0:360,
\end_layout

\begin_layout Plain Layout

		hide y axis,
\end_layout

\begin_layout Plain Layout

		axis x line*=middle,
\end_layout

\begin_layout Plain Layout

		xtick=
\backslash
empty,
\end_layout

\begin_layout Plain Layout

		samples=26
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot [const plot mark mid, very thick, red] {sin(2*x)};
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot [ycomb, mark=*, thick, mark size=1] {sin(2*x)};
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot [densely dotted, samples=51] {sin(2*x)};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:3-bit-quantization-example"

\end_inset

3-bit quantization example
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The higher the bit depth, the better the amplitude is approximated.
 The standard quantization is coded on 
\series bold
16 bits
\series default
.
 For instance, take the same previous analog signal with a 16-bit quantization:
 the amplitude can assume 
\begin_inset Formula $2^{16}$
\end_inset

 values, which will give a lot more precise accuracy (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:16-bit-quantization-example-1"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		domain=0:360,
\end_layout

\begin_layout Plain Layout

		hide y axis,
\end_layout

\begin_layout Plain Layout

		axis x line*=middle,
\end_layout

\begin_layout Plain Layout

		xtick=
\backslash
empty,
\end_layout

\begin_layout Plain Layout

		samples=100
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot [const plot mark mid, very thick, red] {sin(2*x)};
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot [ycomb, mark=*, thick, mark size=1] {sin(2*x)};
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot [densely dotted, samples=51] {sin(2*x)};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:16-bit-quantization-example-1"

\end_inset

16-bit quantization example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Divide and conquer: the math way
\end_layout

\begin_layout Standard
The previous sections should have given enough information to proceed to
 the real problem: how to break down a complex audio signal into pure sine
 waves with their own parameters.
\end_layout

\begin_layout Subsection
The Taylor series
\end_layout

\begin_layout Standard
A 
\series bold
Taylor series
\series default
 is a series expansion of a function about a point.
 The Taylor series of a 
\shape italic
real function
\shape default
 
\begin_inset Formula $f(x)$
\end_inset

 about a point 
\begin_inset Formula $a$
\end_inset

 is given by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(x)=\stackrel[n=0]{\infty}{\sum}\frac{f^{(n)}(a)}{n!}(x-a)^{n}
\]

\end_inset


\end_layout

\begin_layout Standard
If 
\begin_inset Formula $a=0$
\end_inset

 then the expansion is known as a 
\series bold
Maclaurin series
\series default
, given by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(x)=\stackrel[n=0]{\infty}{\sum}\frac{f^{(n)}(0)}{n!}x{}^{n}
\]

\end_inset


\end_layout

\begin_layout Standard
If the upper limit of the summation is not an 
\begin_inset Formula $\infty$
\end_inset

 but a generic 
\begin_inset Formula $N$
\end_inset

 then a Taylor polynomial is being calculated.
\end_layout

\begin_layout Standard
The Taylor's theorem states that any function can be expressed as a Taylor
 series as long as the function can be derived 
\begin_inset Formula $N$
\end_inset

 times in a 
\series bold
neighborhood
\series default
 of 
\begin_inset Formula $a$
\end_inset

.
 But this is not always possible for a normal audio signal, for instance,
 let's take a look at the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Audio-signal-example"

\end_inset

, the function represented is neither analytic nor continuous, so it cannot
 be approximated by a Taylor polynomial.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		grid=major,
\end_layout

\begin_layout Plain Layout

		samples=200,
\end_layout

\begin_layout Plain Layout

		domain=0:10,
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 10,
\end_layout

\begin_layout Plain Layout

		xlabel = time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = amplitude
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]
\end_layout

\begin_layout Plain Layout

		{(0.3*gauss(0,0.2) + 0.5*rand) * sin(deg(x)) * 2};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Audio-signal-example"

\end_inset

Audio signal example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
The Fourier series
\end_layout

\begin_layout Standard
Joseph Fourier, a French mathematician, discovered a way to approximate
 a discontinuous function using a so-called 
\series bold
trigonometric polynomial 
\series default
or even a 
\series bold
trigonometric series
\series default
.
\end_layout

\begin_layout Subsubsection
Trigonometric polynomials
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\shape italic
Def.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Trigonometric polynomial
\end_layout

\begin_layout Plain Layout
A trigonometric polynomial of order 
\begin_inset Formula $n$
\end_inset

 is a function like:
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Formula $P_{n}(x)=\frac{a_{0}}{2}+\stackrel[k=1]{n}{\sum}(a_{k}\cos kx+b_{k}\sin kx)$
\end_inset

, with 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The real constant 
\begin_inset Formula $a_{k}$
\end_inset

 and 
\begin_inset Formula $b_{k}$
\end_inset

 are independent from 
\begin_inset Formula $x$
\end_inset

 and they are called 
\series bold
polynomial coefficients
\series default
.
\end_layout

\begin_layout Standard
The term 
\begin_inset Formula $a_{k}\cos kx+b_{k}\sin kx$
\end_inset

 is a sinusoidal function whose period is 
\begin_inset Formula $T_{k}=\frac{2\pi}{k}$
\end_inset

.
\end_layout

\begin_layout Standard
So a trigonometric polynomial is a linear combination of sinusoidal functions,
 whose common period is 
\begin_inset Formula $T=2\pi$
\end_inset

, multiple of all the main periods.
 It is a periodic function, but not necessarily sinusoidal.
\end_layout

\begin_layout Subsubsection
Trigonometric series
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\shape italic
Def.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Trigonometric series
\end_layout

\begin_layout Plain Layout
A trigonometric series is a series of functions like:
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Formula $\frac{a_{0}}{2}+\stackrel[k=1]{+\infty}{\sum}(a_{k}\cos kx+b_{k}\sin kx)$
\end_inset

, with 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $a_{0}$
\end_inset

, 
\begin_inset Formula $a_{k}$
\end_inset

 and 
\begin_inset Formula $b_{k}$
\end_inset

 are the 
\series bold
coefficients 
\series default
of the series.
\end_layout

\begin_layout Subsubsection
Fourier coefficients
\end_layout

\begin_layout Standard
Take the generic function 
\begin_inset Formula $f(x)$
\end_inset

 with 
\begin_inset Formula $T=2\pi$
\end_inset

, integrable in 
\begin_inset Formula $\left[-\pi,\pi\right]$
\end_inset

.
 Then surely 
\begin_inset Formula $f(x)\cos nx$
\end_inset

 and 
\begin_inset Formula $f(x)\sin nx$
\end_inset

 with 
\begin_inset Formula $n\in\mathbb{N}$
\end_inset

 will be integrable in 
\begin_inset Formula $\left[-\pi,\pi\right]$
\end_inset

.
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\shape italic
Def.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Fourier coefficients of
\series default
 
\begin_inset Formula $f(x)$
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
a_{0}=\sideset{\frac{1}{\pi}}{_{-\pi}^{\pi}}\int f(x)\,dx
\]

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
a_{n}=\sideset{\frac{1}{\pi}}{_{-\pi}^{\pi}}\int f(x)\cos nx\,dx
\]

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
b_{n}=\sideset{\frac{1}{\pi}}{_{-\pi}^{\pi}}\int f(x)\sin nx\,dx
\]

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
with 
\begin_inset Formula $n\in\mathbb{N^{\star}}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Fourier series
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\shape italic
Def.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Fourier series
\end_layout

\begin_layout Plain Layout
Given a function 
\begin_inset Formula $f(x)$
\end_inset

 with 
\begin_inset Formula $T=2\pi$
\end_inset

 and integrable in 
\begin_inset Formula $\left[-\pi,\pi\right]$
\end_inset

, the following trigonometric series is called 
\series bold
Fourier series
\series default
:
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\frac{a_{0}}{2}+\stackrel[n=1]{+\infty}{\sum}(a_{n}\cos nx+b_{n}\sin nx)
\]

\end_inset


\end_layout

\begin_layout Plain Layout
whose coefficients are the Fourier coefficients.
\end_layout

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
If the function 
\begin_inset Formula $f(x)$
\end_inset

 to expanded is even or odd the Fourier series can be simplified as follows:
\end_layout

\begin_layout Itemize
\begin_inset Formula $f(x)$
\end_inset

 is even, Fourier series is a cosines series
\begin_inset Formula 
\[
\frac{a_{0}}{2}+\stackrel[n=1]{+\infty}{\sum}a_{n}\cos nx
\]

\end_inset

where:
\begin_inset Formula 
\[
a_{0}=\sideset{\frac{1}{\pi}}{_{-\pi}^{\pi}}\int f(x)\,dx=\sideset{\frac{2}{\pi}}{_{0}^{\pi}}\int f(x)\,dx
\]

\end_inset


\begin_inset Formula 
\[
a_{n}=\sideset{\frac{1}{\pi}}{_{-\pi}^{\pi}}\int f(x)\cos nx\,dx=\sideset{\frac{2}{\pi}}{_{0}^{\pi}}\int f(x)\cos nx\,dx
\]

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $f(x)$
\end_inset

 is odd, Fourier series is a sines series
\begin_inset Formula 
\[
\stackrel[n=1]{+\infty}{\sum}b_{n}\sin nx
\]

\end_inset

where:
\begin_inset Formula 
\[
b_{n}=\sideset{\frac{2}{\pi}}{_{0}^{\pi}}\int f(x)\sin nx\,dx
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Foot
status open

\begin_layout Plain Layout
The product of two even functions is an even function; the product of two
 odd functions is an even function.
\end_layout

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout

\series bold
Integration by parts
\series default
 is often used to solve those integrals.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Discrete Fourier Transform
\end_layout

\begin_layout Standard
The DFT (Discrete Fourier Transform) applies to discrete signals and gives
 a discrete spectrum.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
X(n)=\stackrel[t=0]{N-1}{\sum}x(t)e^{-i(2\pi tn/N)}
\]

\end_inset


\end_layout

\begin_layout Standard
Where:
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $N$
\end_inset


\series default
 is the size of the 
\series bold
window
\series default
: the number of samples that composed the signal
\end_layout

\begin_layout Itemize
\begin_inset Formula $X(n)$
\end_inset

 is the 
\series bold
n
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
th
\end_layout

\end_inset

 bin of frequencies
\end_layout

\begin_layout Itemize
\begin_inset Formula $x(t)$
\end_inset

 is the 
\series bold
t
\begin_inset script superscript

\begin_layout Plain Layout

\series bold
th
\end_layout

\end_inset

 sample of the audio signal
\end_layout

\begin_layout Standard
The interpretation is that the vector 
\begin_inset Formula $x$
\end_inset

 represents the signal level at various points in time, the vector 
\begin_inset Formula $X$
\end_inset

 represents the signal level at various frequencies.
 What the formula states is that the signal level at frequency 
\begin_inset Formula $n$
\end_inset

 is equal to the sum of the signal level at each time 
\begin_inset Formula $t$
\end_inset

 multiplied by a complex exponential (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Visual-representation-of"

\end_inset

).
\end_layout

\begin_layout Standard
For example, take an audio signal with 512-sample window, this formula must
 be applied 512 times:
\end_layout

\begin_layout Itemize
Once for 
\begin_inset Formula $n=0$
\end_inset

 to compute the 
\begin_inset Formula $0^{th}$
\end_inset

 bin of frequencies
\end_layout

\begin_layout Itemize
Once for 
\begin_inset Formula $n=1$
\end_inset

 to compute the 
\begin_inset Formula $1^{st}$
\end_inset

 bin of frequencies
\end_layout

\begin_layout Itemize
...
\end_layout

\begin_layout Itemize
Once for 
\begin_inset Formula $n=511$
\end_inset

 to compute the 
\begin_inset Formula $511^{th}$
\end_inset

 bin of frequencies
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[x={(1cm,0.5cm)},z={(0cm,0.5cm)},y={(1cm,-0.2cm)}]
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->,thick,black!70] (0,6.5,0) -- (6.2,6.5,0) node[right] {Frequency};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->,thick,black!70] (0,0,0) -- (0,6.5,0) node[below right] {Time};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->,thick] (0,0,0) -- (0,0,2) node[above] {Magnitude};
\end_layout

\begin_layout Plain Layout

	
\backslash
foreach 
\backslash
y in {0.5,1.5,...,5.5}{
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [cyan!50, domain=0:2*pi,samples=200,smooth]
\end_layout

\begin_layout Plain Layout

			plot (
\backslash
y,
\backslash
x, {sin(4*
\backslash
y*
\backslash
x r)/
\backslash
y });
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[blue, ultra thick] (
\backslash
y,6.5,0) -- (
\backslash
y,6.5,1/
\backslash
y);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
draw [red, thick, domain=0:2*pi,samples=200,smooth]
\end_layout

\begin_layout Plain Layout

	plot (0,
\backslash
x, {sin(4*0.5*
\backslash
x r)/0.5 + sin(4*1.5*
\backslash
x r)/1.5 + sin(4*2.5*
\backslash
x r)/2.5 + sin(4*3.5*
\backslash
x r)/3.5 + sin(4*4.5*
\backslash
x r)/4.5 + sin(4*5.5*
\backslash
x r)/5.5} );
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Visual-representation-of"

\end_inset

Visual representation of FT
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
A bin of frequencies is a group of frequencies among two boundaries.
 The reason why the DFT can compute bins of frequencies and not exact frequencie
s is quite simple: the DFT gives a 
\series bold
discrete spectrum
\series default
.
 A bin of frequencies is the smallest unit of frequencies the DFT can compute
 and the size of the bin is called 
\series bold
spectral resolution 
\series default
or 
\series bold
frequency resolution
\series default
 which is given by the formula:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
B_{S}=\frac{\frac{F_{S}}{2}}{\frac{N}{2}}=\frac{F_{S}}{N}
\]

\end_inset


\end_layout

\begin_layout Standard
Where:
\end_layout

\begin_layout Itemize
\begin_inset Formula $B_{S}$
\end_inset

 is the 
\series bold
bin size
\end_layout

\begin_layout Itemize
\begin_inset Formula $F_{S}$
\end_inset

 is the 
\series bold
sampling rate
\end_layout

\begin_layout Itemize
\begin_inset Formula $N$
\end_inset

 is the 
\series bold
size of the window
\end_layout

\begin_layout Standard
For instance, take a sampling rate of 8000 Hz and a window size of 512,
 this will give a bin size of 
\series bold
15.6 Hz
\series default
, so:
\end_layout

\begin_layout Itemize
The 
\begin_inset Formula $0^{th}$
\end_inset

 bin contains the frequencies between 0 Hz and 15.6 Hz
\end_layout

\begin_layout Itemize
The 
\begin_inset Formula $1^{st}$
\end_inset

 bin contains the frequencies between 15.6 Hz and 31.2 Hz
\end_layout

\begin_layout Itemize
And so on
\end_layout

\begin_layout Standard
A particularity for an audio signal is that 
\series bold
only the half of the bins computed by the DFT are needed
\series default
.
 An audio signal is a real input, and when the FT is applied to a real signal
 the output of the FT is symmetric, and that's why in the formula the N
 size is divided by 2.
 Also, the sampling rate is divided by 2 for the Nyquist-Shannon theorem.
\end_layout

\begin_layout Section
Window function
\end_layout

\begin_layout Standard
Now the problem is partially solved: the DFT can be used to obtain the frequenci
es amplitude for (just saying) the first 
\begin_inset Formula $\frac{1}{10}$
\end_inset

 second part of the song, for the second, the third and so on.
\end_layout

\begin_layout Standard
The problem is that in this way a rectangular function is implicitly applied:
 a function that equals 1 for the song portion under analysis and 0 elsewhere
 (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Rectangular-window-function"

\end_inset

).
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		domain=0:.1,
\end_layout

\begin_layout Plain Layout

		samples=500,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = .1,
\end_layout

\begin_layout Plain Layout

		ymin =  -2, ymax = 2,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = amplitude,
\end_layout

\begin_layout Plain Layout

		axis x line=bottom,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		xtick={0,0.02,0.04,0.06,0.08,0.1}
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[color=red,mark=x] coordinates { (0,1) (0.02,1) };
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[color=red,mark=x] coordinates { (0.02,0) (0.1,0) };
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=green,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(pi*120*x))/2 - sin(deg(pi*60*x))/3 - sin(deg(pi*20*x))/6
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Rectangular-window-function"

\end_inset

Rectangular window function example
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
By windowing the audio signal, the audio signal is multiplied by a window
 function which depends on the piece of the audio signal under analysis.
 The usage of a window function produces 
\series bold
spectral leakage
\series default
.
 Spectral leakage is the apparition of new frequencies that doesn't exist
 inside the audio signal.
 The power of the real frequencies is leaked to others frequencies.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Spectral leakage can't be avoided but it can be controlled or even reduced
 by choosing the right window function: there are many different window
 function besides the rectangular one.
 Just to name a few: triangular, Blackman, Hamming, Hann and many others.
\end_layout

\begin_layout Standard
When analyzing unknown data or high noise ones probably the best choice
 is the Hann window function, defined by the following formula:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
w(n)=\frac{1}{2}\left(1-\cos\left(\frac{2\pi n}{N-1}\right)\right)
\]

\end_inset


\end_layout

\begin_layout Standard
Where:
\end_layout

\begin_layout Itemize
\begin_inset Formula $N$
\end_inset

 is the size of the window
\end_layout

\begin_layout Itemize
\begin_inset Formula $w(n)$
\end_inset

 is the value of the window function at 
\begin_inset Formula $n$
\end_inset


\end_layout

\begin_layout Standard
The aim of this window function is to decrease the amplitude of the discontinuit
ies at the boundaries of a given piece of an audio signal (see figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Shape-the-signal"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight/2,
\end_layout

\begin_layout Plain Layout

		domain=0:1,
\end_layout

\begin_layout Plain Layout

		samples=500,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 1,
\end_layout

\begin_layout Plain Layout

		ymin = -1.5, ymax = 1.5,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = Time,
\end_layout

\begin_layout Plain Layout

		ylabel=Audio signal,
\end_layout

\begin_layout Plain Layout

		axis x line=center,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		ytick=
\backslash
empty,
\end_layout

\begin_layout Plain Layout

		xtick=
\backslash
empty
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(pi*20*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight/2,
\end_layout

\begin_layout Plain Layout

		domain=0:1,
\end_layout

\begin_layout Plain Layout

		samples=500,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 1,
\end_layout

\begin_layout Plain Layout

		ymin =  -1.5, ymax = 1.5,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = Time,
\end_layout

\begin_layout Plain Layout

		ylabel = Window function,
\end_layout

\begin_layout Plain Layout

		axis x line=center,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		ytick=
\backslash
empty,
\end_layout

\begin_layout Plain Layout

		xtick=
\backslash
empty
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=red,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(pi*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight/2,
\end_layout

\begin_layout Plain Layout

		domain=0:1,
\end_layout

\begin_layout Plain Layout

		samples=500,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 1,
\end_layout

\begin_layout Plain Layout

		ymin =  -1.5, ymax = 1.5,
\end_layout

\begin_layout Plain Layout

		grid = major,
\end_layout

\begin_layout Plain Layout

		xlabel = Time,
\end_layout

\begin_layout Plain Layout

		ylabel = Window function,
\end_layout

\begin_layout Plain Layout

		axis x line=center,
\end_layout

\begin_layout Plain Layout

		axis y line=left,
\end_layout

\begin_layout Plain Layout

		ytick=
\backslash
empty,
\end_layout

\begin_layout Plain Layout

		xtick=
\backslash
empty
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=red,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(pi*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=red,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			-sin(deg(pi*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			color=blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]{
\end_layout

\begin_layout Plain Layout

			sin(deg(pi*20*x)) * sin(deg(pi*x))
\end_layout

\begin_layout Plain Layout

		};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Shape-the-signal"

\end_inset

Shape the signal with a window function
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Time complexity and simplifications
\end_layout

\begin_layout Standard
Looking again at the DFT formula it can be seen that N additions and N multiplic
ations are needed to compute just a bin.
 This means that 
\begin_inset Formula $2N^{2}$
\end_inset

 operations are required for each bin and this is a lot of work.
\end_layout

\begin_layout Standard
Take a 3-minute song sampled at 44.1 kHz and compute its spectrogram with
 a 4096-sized window.
 The software need to compute 
\begin_inset Formula $\frac{44100}{4096}\simeq10.8$
\end_inset

 DFT per second so
\begin_inset Formula $\frac{44100}{4096}\cdot3\cdot60\simeq1938$
\end_inset

 DFT for the full song.
 Each DFT needs 
\begin_inset Formula $2\cdot4096^{2}$
\end_inset

 operations, so:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\frac{44100}{\cancel{4096}}\cdot3\cdot60\cdot2\cdot4096^{\cancel{2}}\simeq6.5\cdot10^{10}\,\textrm{operations}
\]

\end_inset


\end_layout

\begin_layout Standard
Even worse if there are, to say, 100 songs to analyze.
 Thankfully, there are faster implementations of the DFT called FFT (Fast
 Fourier Transform) which require just 
\begin_inset Formula $\frac{3}{2}Nlog(N)$
\end_inset

 operations.
 But this is not enough: the time complexity of the whole algorithm can
 be reduced with some other tricks.
\end_layout

\begin_layout Subsection
Downsampling and window size
\end_layout

\begin_layout Standard

\series bold
Downsampling 
\series default
is the process of reducing the sampling rate of a signal.
 Also, the window size can be reduced accordingly, just take the highest
 acceptable value (the value which gives an acceptable frequency resolution).
 Take a standard song at 44.1 kHz and resample it at 8 kHz, use a window
 size of just 512: in this way, there are fewer samples to analyze and the
 FFT is applied less frequently.
\end_layout

\begin_layout Standard
The only difference is that the resampled song will only have frequencies
 from 0 to 4 kHz (Nyquist-Shannon theorem), but the most important part
 of a song is still present in this range of frequencies.
\end_layout

\begin_layout Chapter
The actual algorithm
\end_layout

\begin_layout Standard
Now let's put everything together and start coding the algorithm.
 The aim of the software is to record a small portion of a song and find
 its title.
\end_layout

\begin_layout Standard
The following sections will cover a global overview of the algorithm, then
 the actual process involved in the song scoring.
\end_layout

\begin_layout Section
Global overview
\end_layout

\begin_layout Standard
An 
\series bold
audio fingerprint 
\series default
is a digital summary that can be used to identify an audio sample.
 In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:General-overview-scheme"

\end_inset

 a simplified architecture of the scoring algorithm is represented.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[box/.style={draw,rounded corners,text width=2.5cm,node
 distance=1cm and 3 cm,align=center}]
\end_layout

\begin_layout Plain Layout

	
\backslash
node[box] (a) {
\backslash
textbf{Song files}};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[box,right=of a] (b) {
\backslash
textbf{Fingerprint database}};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[box,below=of b] (c) {
\backslash
textbf{Server}};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[box,below=of c] (d) {
\backslash
textbf{Recording fingerprint}};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[box,left=of d] (e) {
\backslash
textbf{Recording}};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (a) to node [above] {
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{tabular}{cc}
\end_layout

\begin_layout Plain Layout

			Fingerprinting
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

			Algorithm
\end_layout

\begin_layout Plain Layout

		
\backslash
end{tabular}
\end_layout

\begin_layout Plain Layout

	} (b);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[<-] (b) to node [right] {Search} (c);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (e) to node [above] {
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{tabular}{cc}
\end_layout

\begin_layout Plain Layout

			Fingerprinting
\backslash

\backslash

\end_layout

\begin_layout Plain Layout

			Algorithm
\end_layout

\begin_layout Plain Layout

		
\backslash
end{tabular}
\end_layout

\begin_layout Plain Layout

	} (d);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[->] (d) to node [right] {Sent to} (c);
\end_layout

\begin_layout Plain Layout

	
\backslash
node[draw,dotted,fit=(a)(b)(c),label=left:
\backslash
rotatebox{90}{Server-side}] {};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[draw,dotted,fit=(d)(e),label=left:
\backslash
rotatebox{90}{Client-side}] {};
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:General-overview-scheme"

\end_inset

General overview scheme
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
On the 
\series bold
server side
\series default
:
\end_layout

\begin_layout Itemize
The algorithm computes the fingerprints of input tracks
\end_layout

\begin_layout Itemize
Store the fingerprints in the database
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
On the 
\series bold
client side
\series default
:
\end_layout

\begin_layout Itemize
Record the current playing music for a couple of seconds
\end_layout

\begin_layout Itemize
Compute the fingerprints of the recording
\end_layout

\begin_layout Itemize
Send them to the server
\end_layout

\begin_layout Itemize
Output the server response
\end_layout

\begin_layout Standard
When the server receives the recording fingerprints by the client it checks
 if they are present in the database and sends a response to the client.
\end_layout

\begin_layout Standard
In the following sections the algorithm is being described.
 Take into account that some obvious parts (such as the usage of the microphone
 interface or the track file reading routines) will not be deeply described,
 since that they are simple and well-known.
\end_layout

\begin_layout Section
Spectrogram creation
\end_layout

\begin_layout Standard
The first step to analyze the audio is to create the spectrogram.
 The process is described in the following lines:
\end_layout

\begin_layout Itemize
A 512-sized Hann window function is computed
\end_layout

\begin_layout Itemize
The audio signal is divided in 512-sized windows with a 50% overlap (figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Audio-windowing-with-overlap"

\end_inset

)
\end_layout

\begin_layout Itemize
Each audio window is multiplied by the Hann precomputed window
\end_layout

\begin_layout Itemize
The DFT is computed for each audio window and added into a list which represents
 the spectrogram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		grid=major,
\end_layout

\begin_layout Plain Layout

		samples=200,
\end_layout

\begin_layout Plain Layout

		domain=0:10,
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 10,
\end_layout

\begin_layout Plain Layout

		ymin = -1, ymax = 1,
\end_layout

\begin_layout Plain Layout

		xlabel = time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = amplitude
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (0,0) rectangle (10,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (10,0) rectangle (20,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (20,0) rectangle (30,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (30,0) rectangle (40,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (40,0) rectangle (50,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (50,0) rectangle (60,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (60,0) rectangle (70,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (70,0) rectangle (80,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (80,0) rectangle (90,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [red, very thick] (90,0) rectangle (100,200);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (5,0) rectangle (15,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (15,0) rectangle (25,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (25,0) rectangle (35,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (35,0) rectangle (45,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (45,0) rectangle (55,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (55,0) rectangle (65,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (65,0) rectangle (75,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (75,0) rectangle (85,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw [green, fill=green, fill opacity=0.2] (85,0) rectangle (95,200);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
addplot[
\end_layout

\begin_layout Plain Layout

			blue,
\end_layout

\begin_layout Plain Layout

			line width=1pt
\end_layout

\begin_layout Plain Layout

		]
\end_layout

\begin_layout Plain Layout

		{(0.3*gauss(0,0.2) + 0.5*rand) * sin(deg(x)) * 2};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Audio-windowing-with-overlap"

\end_inset

Audio windowing with overlap
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Peaks finder and fingerprinting
\end_layout

\begin_layout Standard
The spectrogram is then processed in order to obtain its most significant
 information.
 It is divided in a sort of a grid, each cell of the grid has the following
 sizes:
\end_layout

\begin_layout Itemize
Width equals to 
\begin_inset Formula $C$
\end_inset


\end_layout

\begin_layout Itemize
Height equals to a range of frequencies (called 
\series bold
band
\series default
)
\end_layout

\begin_layout Standard
Take the simplified figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Spectrum-division"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Each color is a band
\end_layout

\end_inset

 where:
\end_layout

\begin_layout Itemize
\begin_inset Formula $C=4$
\end_inset


\end_layout

\begin_layout Itemize
The band size is always 100 Hz
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		grid=major,
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		xlabel = Time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = Frequency $(Hz)$,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 13,
\end_layout

\begin_layout Plain Layout

		ymin = 0, ymax = 4000,
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north west lines, pattern color=blue, line width=1pt] (0,0)
 rectangle (40,100);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north east lines, pattern color=blue, line width=1pt] (40,0)
 rectangle (80,100);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north west lines, pattern color=blue, line width=1pt] (80,0)
 rectangle (120,100);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north east lines, pattern color=green, line width=1pt] (0,100)
 rectangle (40,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north west lines, pattern color=green, line width=1pt] (40,100)
 rectangle (80,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north east lines, pattern color=green, line width=1pt] (80,100)
 rectangle (120,200);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north west lines, pattern color=red, line width=1pt] (0,200)
 rectangle (40,300);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north east lines, pattern color=red, line width=1pt] (40,200)
 rectangle (80,300);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north west lines, pattern color=red, line width=1pt] (80,200)
 rectangle (120,300);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north east lines, pattern color=orange, line width=1pt] (0,300)
 rectangle (40,400);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north west lines, pattern color=orange, line width=1pt] (40,300)
 rectangle (80,400);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[pattern=north east lines, pattern color=orange, line width=1pt] (80,300)
 rectangle (120,400);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[decoration={brace,mirror,raise=15pt},decorate]   (0,0) -- node[below=16pt]
 {
\backslash
textbf{C}} (3.2,0);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[decoration={brace,mirror},decorate]   (10.8,0) -- node[xshift=10pt]
 {
\backslash
rotatebox{-90}{
\backslash
textbf{band}}} (10.8,1.4);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Spectrum-division"

\end_inset

Spectrogram division
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
In the actual algorithm 
\begin_inset Formula $C=32$
\end_inset

 and the bands sizes follow a logarithmic scale.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
For each cell the algorithm finds and stores the 3 most powerful frequencies
 in a list (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Three-points-per"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		grid=major,
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		xlabel = Time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = Frequency $(Hz)$,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 13,
\end_layout

\begin_layout Plain Layout

		ymin = 0, ymax = 4000,
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[blue, line width=1pt] (0,0) rectangle (40,100);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[blue, line width=1pt] (40,0) rectangle (80,100);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[blue, line width=1pt] (80,0) rectangle (120,100);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw[green, line width=1pt] (0,100) rectangle (40,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[green, line width=1pt] (40,100) rectangle (80,200);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[green, line width=1pt] (80,100) rectangle (120,200);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw[red, line width=1pt] (0,200) rectangle (40,300);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[red, line width=1pt] (40,200) rectangle (80,300);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[red, line width=1pt] (80,200) rectangle (120,300);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\backslash
draw[orange, line width=1pt] (0,300) rectangle (40,400);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[orange, line width=1pt] (40,300) rectangle (80,400);
\end_layout

\begin_layout Plain Layout

		
\backslash
draw[orange, line width=1pt] (80,300) rectangle (120,400);
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

		
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 0.745560224337 , 378.5992651
97 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 3.35149848633 , 885.69642912
8 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 1.36552968092 , 687.79506248
 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.73052621593 , 1521.618562
76 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 2.24021149438 , 1286.762539
77 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 2.31025446998 , 1759.585072
66 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 0.367038182557 , 2640.0077863
8 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.60223704132 , 2543.51959691
 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 3.29030455474 , 2857.42356211
 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 3.06012887649 , 3859.57073
579 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 1.04281482521 , 3310.98256
132 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 0.342092598793 ,
 3187.00295803 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 6.13965840628 , 346.37314184
4 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 6.18220033666 , 151.14467838
3 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 5.10152863505 , 640.55570001
8 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.25598325224 , 1797.769092
61 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 7.08091233708 , 1668.626795
36 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 5.30064456137 , 1131.850638
39 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 7.2544573697 , 2751.61392809
 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.8872104256 , 2267.19959314
 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 7.45001350539 , 2289.19953153
 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.64148867695 , 3139.99246
694 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.80868333293 , 3160.84633
384 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 4.68927142292 , 3263.16366
007 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 8.50986878705 , 653.82012721
1 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 8.94884609281 , 539.46336189
3 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 8.44637953657 , 707.94351178
6 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 9.49315824083 , 1563.597638
99 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 9.74759745215 , 1888.112335
31 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 10.7844077137 , 1477.871231
18 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.899479235 , 2856.56308609
 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 9.50730112412 , 2796.10602412
 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 11.6806723738 , 2173.69277417
 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 9.28333255686 , 3800.01058
487 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 9.87529616782 , 3162.85741
608 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.5805497799 , 3704.10829
642 ) }; 
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Three-points-per"

\end_inset

Three points per cell spectrogram
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Links structure
\end_layout

\begin_layout Standard
Now, having a way to compute a frequency summary of an audio signal, the
 recognition process should be straight enough: each point of the recording
 should be compared with the points of the full song.
 Though it works well, this simple approch requires a lot of computation
 time.
\end_layout

\begin_layout Standard
Instead of comparing each point one by one, the idea is to look for multiple
 points at the same time.
 This group of points is called 
\series bold
links
\series default
, and it represents a relationship between a point and some others.
 In order to be sure that both the recording and the full song will generate
 the same links, some rules must be defined:
\end_layout

\begin_layout Itemize
Spectrogram points must be ordered in ascending order according to their
 frequencies
\end_layout

\begin_layout Itemize
Spectrogram points must be ordered in ascending order according to the window
 they belong to
\end_layout

\begin_layout Standard
So, given a point 
\begin_inset Formula $\alpha$
\end_inset

 and an initially empty set of points A, the algorithm will put in A all
 the other points whose window difference compared to the point 
\begin_inset Formula $\alpha$
\end_inset

 is between 1 and 3 and are in the same band as 
\begin_inset Formula $\alpha$
\end_inset

.
 In symbols:
\begin_inset Formula 
\[
\beta\in A\Leftrightarrow(1\leq\beta.window-\alpha.window<3)\wedge(\beta.band=\alpha.band)
\]

\end_inset


\end_layout

\begin_layout Standard
\noindent
For each point belonging to A a 
\series bold
link 
\series default
is computed and added to a list (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Links-creation"

\end_inset

).
 The link structure is the following:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Formula $link.hash=SHA1((\beta.window-\alpha.window)+(\beta.frequency-\alpha.frequency)+\alpha.frequency)$
\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Formula $link.window=\alpha.window$
\end_inset


\end_layout

\begin_layout Standard
The produced links are quite reproducible, even in the presence of noise
 and codec compression.
 Another advantage is that in this way all the times are relative.
\end_layout

\begin_layout Standard
On the server side each link is stored in a database along with the song
 information.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		grid=major,
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		xlabel = Time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = Frequency $(Hz)$,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 13,
\end_layout

\begin_layout Plain Layout

		ymin = 0, ymax = 4000,
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout


\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 2.07246366282 , 746.01432767
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 1.93264031653 , 179.29405770
1 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 0.354616533601 , 356.0396263
84 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.15960458468 , 1381.492156
86 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 2.72309319377 , 1629.633417
81 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.71583919728 , 1427.860317
78 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.9205238997 , 2753.72729596
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 0.546995939476 , 2353.2251799
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.18253338838 , 2840.39369243
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 1.68377804401 , 3526.04444
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.87609035949 , 3486.34030
544 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.28755568283 , 3631.17508
084 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 5.37811652146 , 453.91934777
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.60340316546 , 848.06920104
4 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.66076427426 , 767.50608134
2 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [no marks] coordinates { ( 5.44439247352 , 1886.11714475 ) ( 2.72309319377
 , 1629.63341781 ) }; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 5.44439247352 , 1886.117144
75 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.35650455297 , 1300.195594
62 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.48669208201 , 1553.705384
67 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.52845468778 , 2714.15145509
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.08857385548 , 2804.2520032
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 7.61746138453 , 2117.82647276
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.99339309721 , 3772.01111
229 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.06746572113 , 3161.54155
945 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 6.8101374698 , 3223.873258
54 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 10.9291199934 , 215.84351805
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 8.97364518472 , 670.45556462
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 11.4093551256 , 411.45989448
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 9.35773280302 , 1555.566490
25 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.39763433 , 1593.51003205
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.2909063891 , 1511.471438
61 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 10.3596518529 , 2364.03590388
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.46484247359 , 2874.95727498
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.27698747616 , 2289.37228055
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.7884639082 , 3149.58028
707 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 9.79733224029 , 3619.98382
816 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.8469726013 , 3760.50482
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 2.72309319377 , 1629.63341781 )}; 
\backslash
addplot [no marks] coordinates { ( 2.07246366282 , 746.014327679 ) ( 4.60340316546
 , 848.069201044 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 2.07246366282 , 746.01432767
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [no marks] coordinates { ( 1.93264031653 , 179.294057701 ) ( 4.60340316546
 , 848.069201044 ) }; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 1.93264031653 , 179.29405770
1 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 0.354616533601 , 356.0396263
84 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.15960458468 , 1381.492156
86 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 2.72309319377 , 1629.633417
81 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.71583919728 , 1427.860317
78 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.9205238997 , 2753.72729596
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 0.546995939476 , 2353.2251799
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.18253338838 , 2840.39369243
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 1.68377804401 , 3526.04444
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.87609035949 , 3486.34030
544 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.28755568283 , 3631.17508
084 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 5.37811652146 , 453.91934777
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.60340316546 , 848.06920104
4 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.66076427426 , 767.50608134
2 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 5.44439247352 , 1886.117144
75 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.35650455297 , 1300.195594
62 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.48669208201 , 1553.705384
67 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.52845468778 , 2714.15145509
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.08857385548 , 2804.2520032
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 7.61746138453 , 2117.82647276
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.99339309721 , 3772.01111
229 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.06746572113 , 3161.54155
945 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 6.8101374698 , 3223.873258
54 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 10.9291199934 , 215.84351805
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 8.97364518472 , 670.45556462
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 11.4093551256 , 411.45989448
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 9.35773280302 , 1555.566490
25 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.39763433 , 1593.51003205
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.2909063891 , 1511.471438
61 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 10.3596518529 , 2364.03590388
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.46484247359 , 2874.95727498
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.27698747616 , 2289.37228055
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.7884639082 , 3149.58028
707 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 9.79733224029 , 3619.98382
816 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.8469726013 , 3760.50482
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4.60340316546 , 848.069201044 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 2.07246366282 , 746.01432767
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 1.93264031653 , 179.29405770
1 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 0.354616533601 , 356.0396263
84 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.15960458468 , 1381.492156
86 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 2.72309319377 , 1629.633417
81 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.71583919728 , 1427.860317
78 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.9205238997 , 2753.72729596
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 0.546995939476 , 2353.2251799
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.18253338838 , 2840.39369243
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 1.68377804401 , 3526.04444
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [no marks] coordinates { ( 2.87609035949 , 3486.34030544 ) ( 5.06746572113
 , 3161.54155945 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.87609035949 , 3486.34030
544 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [no marks] coordinates { ( 2.28755568283 , 3631.17508084 ) ( 5.06746572113
 , 3161.54155945 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.28755568283 , 3631.17508
084 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 5.37811652146 , 453.91934777
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.60340316546 , 848.06920104
4 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.66076427426 , 767.50608134
2 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 5.44439247352 , 1886.117144
75 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.35650455297 , 1300.195594
62 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.48669208201 , 1553.705384
67 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.52845468778 , 2714.15145509
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.08857385548 , 2804.2520032
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 7.61746138453 , 2117.82647276
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.99339309721 , 3772.01111
229 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.06746572113 , 3161.54155
945 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [no marks] coordinates { ( 6.8101374698 , 3223.87325854 ) ( 5.06746572113
 , 3161.54155945 ) }; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 6.8101374698 , 3223.873258
54 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 10.9291199934 , 215.84351805
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 8.97364518472 , 670.45556462
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 11.4093551256 , 411.45989448
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 9.35773280302 , 1555.566490
25 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.39763433 , 1593.51003205
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.2909063891 , 1511.471438
61 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 10.3596518529 , 2364.03590388
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.46484247359 , 2874.95727498
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.27698747616 , 2289.37228055
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.7884639082 , 3149.58028
707 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 9.79733224029 , 3619.98382
816 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.8469726013 , 3760.50482
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 5.06746572113 , 3161.54155945 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 2.07246366282 , 746.01432767
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 1.93264031653 , 179.29405770
1 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 0.354616533601 , 356.0396263
84 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.15960458468 , 1381.492156
86 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 2.72309319377 , 1629.633417
81 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 3.71583919728 , 1427.860317
78 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.9205238997 , 2753.72729596
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 0.546995939476 , 2353.2251799
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 2.18253338838 , 2840.39369243
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 1.68377804401 , 3526.04444
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.87609035949 , 3486.34030
544 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 2.28755568283 , 3631.17508
084 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 5.37811652146 , 453.91934777
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.60340316546 , 848.06920104
4 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 4.66076427426 , 767.50608134
2 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 5.44439247352 , 1886.117144
75 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.35650455297 , 1300.195594
62 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 6.48669208201 , 1553.705384
67 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [no marks] coordinates { ( 6.52845468778 , 2714.15145509 ) ( 8.46484247359
 , 2874.95727498 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.52845468778 , 2714.15145509
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [no marks] coordinates { ( 6.08857385548 , 2804.2520032 ) ( 8.46484247359
 , 2874.95727498 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 6.08857385548 , 2804.2520032
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 7.61746138453 , 2117.82647276
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.99339309721 , 3772.01111
229 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 5.06746572113 , 3161.54155
945 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 6.8101374698 , 3223.873258
54 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 10.9291199934 , 215.84351805
9 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 8.97364518472 , 670.45556462
6 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ blue ,only marks,mark=star] coordinates { ( 11.4093551256 , 411.45989448
8 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 9.35773280302 , 1555.566490
25 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.39763433 , 1593.51003205
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ green ,only marks,mark=star] coordinates { ( 11.2909063891 , 1511.471438
61 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [no marks] coordinates { ( 10.3596518529 , 2364.03590388 ) ( 8.46484247359
 , 2874.95727498 ) }; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 10.3596518529 , 2364.03590388
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.46484247359 , 2874.95727498
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ red ,only marks,mark=star] coordinates { ( 8.27698747616 , 2289.37228055
 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.7884639082 , 3149.58028
707 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 9.79733224029 , 3619.98382
816 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )}; 
\backslash
addplot [ orange ,only marks,mark=star] coordinates { ( 10.8469726013 , 3760.50482
057 ) }; 
\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 8.46484247359 , 2874.95727498 )};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Links-creation"

\end_inset

Links creation
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{axis}[
\end_layout

\begin_layout Plain Layout

		grid=major,
\end_layout

\begin_layout Plain Layout

		width=
\backslash
textwidth,
\end_layout

\begin_layout Plain Layout

		height=
\backslash
axisdefaultheight,
\end_layout

\begin_layout Plain Layout

		xlabel = Time $(s)$,
\end_layout

\begin_layout Plain Layout

		ylabel = Frequency $(Hz)$,
\end_layout

\begin_layout Plain Layout

		xmin = 0, xmax = 13,
\end_layout

\begin_layout Plain Layout

		ymin = 0, ymax = 4000,
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout


\backslash
addplot [ only marks,mark=star,nodes near coords={(t1,f1)}] coordinates
 { ( 4 , 2000 ) };
\end_layout

\begin_layout Plain Layout


\backslash
addplot [ only marks,mark=star,nodes near coords={(t2,f2)}] coordinates
 { ( 7 , 2500 ) };
\end_layout

\begin_layout Plain Layout


\backslash
addplot[only marks,mark=o,mark options={solid,scale=2, black},text mark
 as node=true] coordinates {( 4, 2000 )};
\end_layout

\begin_layout Plain Layout


\backslash
addplot [no marks] coordinates { (4,2000) (7,2500) };
\end_layout

\begin_layout Plain Layout


\backslash
node[above,align=left] at (axis cs:8,1500) {hash$=t_2-t_1:f_2-f_1:f_1$
\backslash

\backslash
time=$t_1$};
\end_layout

\begin_layout Plain Layout

	
\backslash
end{axis}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Links-creation-1"

\end_inset

Links creation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Scoring
\end_layout

\begin_layout Standard
It is assumed that the full song links are in the database.
 Now a client after recording a small piece of song, computes on its own
 the links of the recording and send them to the server.
 The server has to:
\end_layout

\begin_layout Itemize
Put the recording links in a temporary in-memory table
\end_layout

\begin_layout Itemize
Relate the full songs links table with the recording table it they share
 the same hash
\end_layout

\begin_layout Itemize
Count the tuples grouped by the time difference between the recording links
 and the full song links
\begin_inset Foot
status open

\begin_layout Plain Layout
Links of the same song, share the same time difference
\end_layout

\end_inset

 and the song id
\end_layout

\begin_layout Itemize
Descending sort the tuples according to the count field
\end_layout

\begin_layout Itemize
The top most tuple obtained contains the id of the most likely matching
\end_layout

\begin_layout Chapter
Java implemetation
\end_layout

\begin_layout Standard
In the next sections the Java implementation of the algorithm will be discussed.
 Some of the most well-known part of the implementation will not be covered
 here, since they are standard pieces of code.
 In the figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Class-diagram"

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Database-conceptual-design"

\end_inset

 there's the class diagram.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{landscape}
\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
moveright  2in  
\backslash
hbox{
\end_layout

\begin_layout Plain Layout


\backslash
scalebox{.75}{
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{package}{io}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{interface}[text width=3.5 cm]{AbstractReader}{-4,-3}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getData () : float[]}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{interface}
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=4.5 cm]{MicReader}{-4,-0.5}
\end_layout

\begin_layout Plain Layout

			
\backslash
implement{AbstractReader}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-seconds : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+MicReader (seconds: int)}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=5.5 cm]{WavReader}{2,-0.5}
\end_layout

\begin_layout Plain Layout

			
\backslash
implement{AbstractReader}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-title : String}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-fileName : String}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-data : float[]}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+WavReader (fileName : String)}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getData () : float[]}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getTitle () : String}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getFileName () : String}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

	
\backslash
end{package}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{package}{database}	
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=5.5 cm]{DB}{9,-1.5}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+DB ()}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+insert (file : WavReader) : void}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+searchId (list : List<Link>) : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getSongById (id : int) : Song}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

	
\backslash
end{package}
\end_layout

\begin_layout Plain Layout

	
\backslash
begin{package}{model}	
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=4.5 cm]{Song}{15.5,-2}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-id : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-title : String}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+DB (id : int, title: String)}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

	
\backslash
end{package}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
begin{package}{spectrogram}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=6 cm]{Spectrogram}{-3,-9}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-winFFT : List<Complex[]>}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+Spectrogram (data : float[])}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getWinFFT () : List<Complex[]>}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=8 cm]{Window}{-3,-12}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-window : float[]}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+Window ()}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+extractWindow (data : float[], pos : int) : float[]}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

	
\backslash
end{package}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
begin{package}{fingerprint}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=6.5 cm]{Fingerprint}{6,-7}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-peakList : List<Peak>}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+Fingerprint (reader : AbstractReader)}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getPeakList() : List<Peak>}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=7 cm]{Peak}{6,-11}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-freq : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-power : float}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-time : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+Peak (freq : int, power : float, time : int)}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getFreq() : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getTime() : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{-getBand(intFreq : int) : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+compareBand(p : Peak) : boolean}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=5.5 cm]{Links}{13,-7}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-peakList : List<Peak>}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+Links (peakList : List<Peak>)}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=6 cm]{Link}{16,-9.5}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-hash : String}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-time : int}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+Link (address : Peak, peak : Peak)}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getHash() : String}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getTime() : int}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

		
\backslash
begin{class}[text width=9 cm]{PeaksFinder}{15,-13}
\end_layout

\begin_layout Plain Layout

			
\backslash
attribute{-peaks : Set<Peak>}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+PeaksFinder (data : Complex[], band : int, time : int)}
\end_layout

\begin_layout Plain Layout

			
\backslash
operation{+getPeaks() : Set<Peak>}
\end_layout

\begin_layout Plain Layout

		
\backslash
end{class}
\end_layout

\begin_layout Plain Layout

	
\backslash
end{package}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{DB}{}{}{WavReader}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{DB}{}{}{Song}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{Spectrogram}{}{}{Window}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{Fingerprint}{}{}{AbstractReader}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{Fingerprint}{}{}{Spectrogram}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{Fingerprint}{}{}{Peak}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{DB}{}{}{Links}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{Links}{}{}{Fingerprint}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{Links}{}{}{Link}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{Fingerprint}{}{}{PeaksFinder}
\end_layout

\begin_layout Plain Layout

	
\backslash
unidirectionalAssociation{PeaksFinder}{}{}{Peak}
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\begin_layout Plain Layout

}}
\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Class-diagram"

\end_inset

Class diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{landscape}
\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[auto,node distance=1.5cm]
\end_layout

\begin_layout Plain Layout

	
\backslash
node[entity] (node1) {
\backslash
textbf{musicinfo}}
\end_layout

\begin_layout Plain Layout

		[grow=up,sibling distance=3cm]
\end_layout

\begin_layout Plain Layout

		child {node[attribute] {path}}
\end_layout

\begin_layout Plain Layout

		child {node[attribute] {title}}
\end_layout

\begin_layout Plain Layout

		child {node[attribute] {
\backslash
underline{id}}};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[relationship] (rel1) [below = of node1] {
\backslash
textit{refers to}};
\end_layout

\begin_layout Plain Layout

	
\backslash
node[entity] (node2) [below = of rel1] {
\backslash
textbf{hashtable}}
\end_layout

\begin_layout Plain Layout

		[grow=down,sibling distance=3cm]
\end_layout

\begin_layout Plain Layout

		child {node[attribute] {
\backslash
underline{id}}}
\end_layout

\begin_layout Plain Layout

		child {node[attribute] {hash}}
\end_layout

\begin_layout Plain Layout

		child {node[attribute] {time}};
\end_layout

\begin_layout Plain Layout

	
\backslash
path (rel1) edge node {1,
\backslash
(n
\backslash
)} (node1)
\end_layout

\begin_layout Plain Layout

	edge node {1,1} (node2);
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Database-conceptual-design"

\end_inset

Database conceptual design
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
